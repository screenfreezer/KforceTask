- name: Create Azure VM
  hosts: localhost
  connection: local
  tasks:
    - name: Create resource group
      azure_rm_resourcegroup:
        name: "{{ resource_group }}"
        location: "{{ region }}"
   
    - name: Create virtual network
      azure_rm_virtualnetwork:
        resource_group: "{{ resource_group }}"
        name: vNet
        address_prefixes: "10.0.0.0/16"
    
    - name: Add subnet 01
      azure_rm_subnet:
        resource_group: "{{ resource_group }}"
        name: public-subnet-1
        address_prefix: "10.0.1.0/24"
        virtual_network: vNet

    - name: Add subnet 02
      azure_rm_subnet:
        resource_group: "{{ resource_group }}"
        name: public-subnet-2
        address_prefix: "10.0.2.0/24"
        virtual_network: vNet


    - name: Create 1st VM IP address
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group }}"
        allocation_method: Static
        name: vm1pip
      register: output_vm1ip_address 

    - name: Create 2nd VM IP address
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group }}"
        allocation_method: Static
        name: vm2pip
      register: output_vm2ip_address          

    - name: Create public LB IP address
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group }}"
        allocation_method: Static
        name: lbpip
      register: output_lbpip_address      

    - name: Output public IP
      debug:
        msg: "The public IP is {{ output_vm1ip_address.state.ip_address }} && {{ output_vm2ip_address.state.ip_address }}"

    - name: Create Network Security Group
      azure_rm_securitygroup:
        resource_group: "{{ resource_group }}"
        name: kForceNetworkSecurityGroup
        rules:
          - name: 'allow_rdp'
            protocol: Tcp
            destination_port_range: 3389
            access: Allow
            priority: 1001
            direction: Inbound

          - name: 'allow_web_traffic'
            protocol: Tcp
            destination_port_range:
              - 80
              - 443
            access: Allow
            priority: 1002
            direction: Inbound

          - name: 'allow_powershell_remoting'
            protocol: Tcp
            destination_port_range: 
              - 5985
              - 5986
            access: Allow
            priority: 1003
            direction: Inbound

    - name: Creating a Load Balancer
      azure_rm_loadbalancer:
        resource_group: "{{ resource_group }}"
        name: MainLoadBalancer
        frontend_ip_configurations:
          - name: frontendipconf0
            public_ip_address: "{{ output_lbpip_address.state.name }}"
        backend_address_pools:
          - name: backendaddrpool0
        probes:
          - name: prob0
            port: 80
        load_balancing_rules:
          - name: lbrbalancingrule0
            frontend_ip_configuration: frontendipconf0
            backend_address_pool: backendaddrpool0
            frontend_port: 80
            backend_port: 80
            probe: prob0
      register: loadbalancer

    - name: Create a network interface for 1st VM
      azure_rm_networkinterface:
          name: nic1
          resource_group: "{{ resource_group }}"
          virtual_network: vNet
          subnet_name: public-subnet-1
          security_group: kForceNetworkSecurityGroup
          ip_configurations:       
            - name: vm1-nic-ip
              public_ip_address_name: vm1pip
              # load_balancer_backend_address_pools:
              #   - "{{ loadbalancer.state.backend_address_pools[0].id }}"
              primary: yes
      register: lb_nic1_register      

    - name: Create a network interface for 2nd VM
      azure_rm_networkinterface:
          name: nic2
          resource_group: "{{ resource_group }}"
          virtual_network: vNet
          subnet_name: public-subnet-1
          security_group: kForceNetworkSecurityGroup
          ip_configurations:       
            - name: vm2-nic-ip
              public_ip_address_name: vm2pip
              load_balancer_backend_address_pools:
                - "{{ loadbalancer.state.backend_address_pools[0].id }}"
              primary: yes
      register: lb_nic2_register 

    - name: Create VMSS
      azure_rm_virtualmachinescaleset:
        load_balancer: MainLoadBalancer
        resource_group: myResourceGroup
        name: win-vmscale
        vm_size: "{{ vm_size }}"
        capacity: 2
        virtual_network_name: vNet
        upgrade_policy: Manual
        subnet_name: public-subnet-1
        terminate_event_timeout_minutes: 10
        scale_in_policy: NewestVM
        admin_username: "{{ username }}"
        admin_password: "{{ password }}" 
        image:
            offer: "{{ offer }}"
            publisher: "{{ publisher }}"
            sku: "{{ sku }}"
            version: "{{ version }}"

    # - name: Create Windows VM 1st
    #   azure_rm_virtualmachine:
    #     resource_group: "{{ resource_group }}"
    #     name: win-vm1
    #     vm_size: "{{ vm_size }}"
    #     admin_username: "{{ username }}" 
    #     admin_password: "{{ password }}" 
    #     network_interfaces: "{{ lb_nic1_register.state.name }}"
    #     os_type: "{{ os_type }}"
    #     image:
    #         offer: "{{ offer }}"
    #         publisher: "{{ publisher }}"
    #         sku: "{{ sku }}"
    #         version: "{{ version }}"

    # - name: Create Windows VM 2nd
    #   azure_rm_virtualmachine:
    #     resource_group: "{{ resource_group }}"
    #     name: win-vm2
    #     vm_size: "{{ vm_size }}"
    #     admin_username: "{{ username }}" 
    #     admin_password: "{{ password }}" 
    #     network_interfaces: "{{ lb_nic2_register.state.name }}"
    #     os_type: "{{ os_type }}"
    #     image:
    #         offer: "{{ offer }}"
    #         publisher: "{{ publisher }}"
    #         sku: "{{ sku }}"
    #         version: "{{ version }}"



    - name: Create VM script extension to enable HTTPS WinRM listener
      azure_rm_virtualmachineextension:
        name: winrm-extension
        resource_group: "{{ resource_group }}"
        virtual_machine_name: win-vmscale
        publisher: Microsoft.Compute
        virtual_machine_extension_type: CustomScriptExtension
        type_handler_version: '1.9'
        settings: '{"fileUris": ["https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1"],"commandToExecute": "powershell -ExecutionPolicy Unrestricted -File ConfigureRemotingForAnsible.ps1"}'
        auto_upgrade_minor_version: true

    - name: Get facts for one Public IP
      azure_rm_publicipaddress_info:
        resource_group: "{{ resource_group }}"
        name: vm1pip
      register: publicipaddresses

    - name: set public ip address fact
      set_fact: publicipaddress="{{ publicipaddresses | json_query('publicipaddresses[0].ip_address')}}"

    - name: wait for the WinRM port to come online
      wait_for:
        port: 5986
        host: '{{ publicipaddress }}'
        timeout: 600
